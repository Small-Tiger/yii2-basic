<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace Fb\BaseCategory;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class CategoryProductInfo extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return CategoryProductInfo
     */
    public static function getRootAsCategoryProductInfo(ByteBuffer $bb)
    {
        $obj = new CategoryProductInfo();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return CategoryProductInfo
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return uint
     */
    public function getProductId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getPosition()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCategoryProductInfo(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return CategoryProductInfo
     */
    public static function createCategoryProductInfo(FlatBufferBuilder $builder, $product_id, $position)
    {
        $builder->startObject(2);
        self::addProductId($builder, $product_id);
        self::addPosition($builder, $position);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addProductId(FlatBufferBuilder $builder, $productId)
    {
        $builder->addUintX(0, $productId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addPosition(FlatBufferBuilder $builder, $position)
    {
        $builder->addUintX(1, $position, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCategoryProductInfo(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
