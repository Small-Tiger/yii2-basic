<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace Fb\BaseCategory;

use Fb\Base\KeyValue;
use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class Category extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return Category
     */
    public static function getRootAsCategory(ByteBuffer $bb)
    {
        $obj = new Category();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return Category
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return uint
     */
    public function getCategoryId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    public function getName()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return uint
     */
    public function getParentId()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return ushort
     */
    public function getSortOrder()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getUshort($o + $this->bb_pos) : 0;
    }

    /**
     * @return ushort
     */
    public function getLevel()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getUshort($o + $this->bb_pos) : 0;
    }

    public function getPath()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return uint
     */
    public function getUpdatedBy()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getCreatedBy()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getUpdatedAt()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getCreatedAt()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getStatus()
    {
        $o = $this->__offset(24);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getIncludeInMenu()
    {
        $o = $this->__offset(26);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getIncludeProductClass()
    {
        $o = $this->__offset(28);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getIsLeaf()
    {
        $o = $this->__offset(30);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @returnVectorOffset
     */
    public function getAttrValue($j)
    {
        $o = $this->__offset(32);
        $obj = new KeyValue();
        return $o != 0 ? $obj->init($this->__indirect($this->__vector($o) + $j * 4), $this->bb) : null;
    }

    /**
     * @return int
     */
    public function getAttrValueLength()
    {
        $o = $this->__offset(32);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCategory(FlatBufferBuilder $builder)
    {
        $builder->StartObject(15);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return Category
     */
    public static function createCategory(FlatBufferBuilder $builder, $category_id, $name, $parent_id, $sort_order, $level, $path, $updated_by, $created_by, $updated_at, $created_at, $status, $include_in_menu, $include_product_class, $is_leaf, $attr_value)
    {
        $builder->startObject(15);
        self::addCategoryId($builder, $category_id);
        self::addName($builder, $name);
        self::addParentId($builder, $parent_id);
        self::addSortOrder($builder, $sort_order);
        self::addLevel($builder, $level);
        self::addPath($builder, $path);
        self::addUpdatedBy($builder, $updated_by);
        self::addCreatedBy($builder, $created_by);
        self::addUpdatedAt($builder, $updated_at);
        self::addCreatedAt($builder, $created_at);
        self::addStatus($builder, $status);
        self::addIncludeInMenu($builder, $include_in_menu);
        self::addIncludeProductClass($builder, $include_product_class);
        self::addIsLeaf($builder, $is_leaf);
        self::addAttrValue($builder, $attr_value);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addCategoryId(FlatBufferBuilder $builder, $categoryId)
    {
        $builder->addUintX(0, $categoryId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addOffsetX(1, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addParentId(FlatBufferBuilder $builder, $parentId)
    {
        $builder->addUintX(2, $parentId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param ushort
     * @return void
     */
    public static function addSortOrder(FlatBufferBuilder $builder, $sortOrder)
    {
        $builder->addUshortX(3, $sortOrder, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param ushort
     * @return void
     */
    public static function addLevel(FlatBufferBuilder $builder, $level)
    {
        $builder->addUshortX(4, $level, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addPath(FlatBufferBuilder $builder, $path)
    {
        $builder->addOffsetX(5, $path, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addUpdatedBy(FlatBufferBuilder $builder, $updatedBy)
    {
        $builder->addUintX(6, $updatedBy, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addCreatedBy(FlatBufferBuilder $builder, $createdBy)
    {
        $builder->addUintX(7, $createdBy, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addUpdatedAt(FlatBufferBuilder $builder, $updatedAt)
    {
        $builder->addUintX(8, $updatedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addCreatedAt(FlatBufferBuilder $builder, $createdAt)
    {
        $builder->addUintX(9, $createdAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addStatus(FlatBufferBuilder $builder, $status)
    {
        $builder->addUintX(10, $status, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addIncludeInMenu(FlatBufferBuilder $builder, $includeInMenu)
    {
        $builder->addUintX(11, $includeInMenu, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addIncludeProductClass(FlatBufferBuilder $builder, $includeProductClass)
    {
        $builder->addUintX(12, $includeProductClass, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addIsLeaf(FlatBufferBuilder $builder, $isLeaf)
    {
        $builder->addUintX(13, $isLeaf, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addAttrValue(FlatBufferBuilder $builder, $attrValue)
    {
        $builder->addOffsetX(14, $attrValue, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createAttrValueVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(4, count($data), 4);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->addOffset($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startAttrValueVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(4, $numElems, 4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCategory(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
